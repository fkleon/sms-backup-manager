//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.01.17 at 02:48:31 PM NZDT 
//
package de.leonhardt.sbm.smsbr.xml.model;

import java.math.BigInteger;
import java.util.Objects;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;

import de.leonhardt.sbm.smsbr.xml.NullLongAdapter;
import lombok.Getter;
import lombok.Setter;

/**
 * <p>Sms from SMS backup & Restore</p>
 * 
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType>
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;attribute name="protocol" type="{http://www.w3.org/2001/XMLSchema}unsignedByte" />
 *       &lt;attribute name="address" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="date" use="required" type="{http://www.w3.org/2001/XMLSchema}unsignedLong" />
 *       &lt;attribute name="type" use="required" type="{http://www.w3.org/2001/XMLSchema}unsignedByte" />
 *       &lt;attribute name="subject" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="body" use="required" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="toa" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="sc_toa" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="service_center" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="read" use="required" type="{http://www.w3.org/2001/XMLSchema}unsignedByte" />
 *       &lt;attribute name="status" use="required" type="{http://www.w3.org/2001/XMLSchema}byte" />
 *       &lt;attribute name="locked" type="{http://www.w3.org/2001/XMLSchema}unsignedByte" />
 *       &lt;attribute name="date_sent" type="{http://www.w3.org/2001/XMLSchema}unsignedLong" />
 *       &lt;attribute name="readable_date" type="{http://www.w3.org/2001/XMLSchema}string" />
 *       &lt;attribute name="contact_name" type="{http://www.w3.org/2001/XMLSchema}string" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Sms")
@XmlRootElement(name = "sms")
@Getter @Setter
public class Sms extends Message {

    /**
     * Protocol used by the message, its mostly 0 in case of SMS messages.
     */
    @XmlAttribute(name = "protocol")
    @XmlSchemaType(name = "unsignedByte")
    protected Short protocol;
    
    /**
     * The phone number of the sender/recipient.
     */
    @XmlAttribute(name = "address", required = true)
    protected String address;

    /**
     * 1 = Received, 2 = Sent, 3 = Draft, 4 = Outbox, 5 = Failed, 6 = Queued
     */
    @XmlAttribute(name = "type", required = true)
    @XmlSchemaType(name = "unsignedByte")
    protected short type;
    
    /**
     *  Subject of the message, its always null in case of SMS messages.
     */
    @XmlAttribute(name = "subject")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String subject;
    
    /**
     * The content of the message.
     */
    @XmlAttribute(name = "body", required = true)
    protected String body;
    
    /**
     * n/a, default to null.
     */
    @XmlAttribute(name = "toa")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String toa;
    
    /**
     * n/a, default to null.
     */
    @XmlAttribute(name = "sc_toa")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String scToa;
    
    /**
     * The service center for the received message, null in case of sent messages.
     */
    @XmlAttribute(name = "service_center")
    protected String serviceCenter;

    /**
     * None = -1, Complete = 0, Pending = 32, Failed = 64.
     */
    @XmlAttribute(name = "status", required = true)
    protected byte status;

    @XmlAttribute(name = "locked")
    @XmlSchemaType(name = "unsignedByte")
    protected Short locked;


	@Override
	public String toString() {
		return "Sms [address=" + address + ", body=" + body + ", contactName="
				+ contactName + ", date=" + date + ", dateSent=" + dateSent
				+ ", locked=" + locked + ", protocol=" + protocol + ", read="
				+ read + ", readableDate=" + readableDate + ", scToa=" + scToa
				+ ", serviceCenter=" + serviceCenter + ", status=" + status
				+ ", subject=" + subject + ", toa=" + toa + ", type=" + type
				+ "]";
	}


	@Override
	public int hashCode() {
		return Objects.hash(address, body, date, protocol, read, status, subject, type);
	}

	/**
	 * To determine the equality, we only compare
	 * - address
	 * - body
	 * - date
	 * - protocol
	 * - read
	 * - status
	 * - subject
	 * - type
	 * 
	 * Other attributes are not relevant, or might even differ for equal objects, e.g.:
	 * - date_sent can be "0" or "null"
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Sms other = (Sms) obj;
		return Objects.equals(address, other.address)
			&& Objects.equals(body, other.body)
			&& Objects.equals(date, other.date)
			&& Objects.equals(protocol, other.protocol)
			&& Objects.equals(read, other.read)
			&& Objects.equals(status, other.status)
			&& Objects.equals(subject, other.subject)
			&& Objects.equals(type, other.type);
	}

}
